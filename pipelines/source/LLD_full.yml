---
authors: Rudolph Pienaar <dev@babymri.org>
name: "Leg Length Discrepancy Full Workflow v20240705"
description: "Perform the full leg length workflow, including joins"
category: Imaging
locked: false
plugin_tree:
  # The root of the pipeline is a copy of its parent node.
  # This copy is needed since the two branches stem off the
  # core node. The root node should contain one or more
  # DICOM files to process
  - title: root-0
    plugin: pl-simpledsapp v2.1.0
    previous: ~

  # On the left branch, we first convert the DICOM(s) in the root
  # to mha (MetaImage Medical Format) which is used by the
  # Simple Image Toolkit (sitk) library in the inference node
  - title: dcm-to-mha-1
    plugin: pl-dcm2mha_cnvtr v1.2.24
    previous: root-0
    plugin_parameter_defaults:
      inputFileFilter: "**/*.dcm"
      rotate: 90
      imageName: 'composite.png'
      filterPerc: 30
  
  # The inference node reads data as mha format (one subject per mha image)
  # and determines the heatmap locations of relevant landmarks    
  - title: generate-landmark-heatmaps-2
    plugin: pl-lld_inference v2.2.11
    previous: dcm-to-mha-1
    plugin_parameter_defaults:
      inputFileFilter: "**/*.mha"
      heatmapThreshold: '0.5'

  # Now back up to the top, and we create a new branch off the root
  # that combines the original node DICOM with the csv output of the
  # inference
  - title: heatmaps-join-root-3
    plugin: pl-topologicalcopy v1.0.2
    previous: root-0
    plugin_parameter_defaults:
      plugininstances: root-0,generate-landmark-heatmaps-2
      filter: \.dcm$,\.csv$

  # And directly off this join, we convert the csv file of the inference
  # to a json
  - title: landmarks-to-json-4
    plugin: pl-csv2json v1.2.4
    previous: heatmaps-join-root-3
    plugin_parameter_defaults:
      inputFileFilter: "**/*.csv"
      outputFileStem: "prediction"
      addTags: "PatientID,PatientName,PatientAge,StudyDate"

  # Now we combine the inference images and the json inference file
  # with a join...
  - title: heatmaps-join-json-5
    plugin: pl-topologicalcopy v1.0.2
    previous: landmarks-to-json-4
    plugin_parameter_defaults:
      plugininstances: generate-landmark-heatmaps-2,landmarks-to-json-4
      filter: \.jpg$,\.json$

  # Working off that join we now measure lengths and generate a
  # report (burned directly into the image, and also saved as a json)
  - title: measure-leg-segments-6
    plugin: pl-markimg v1.4.8
    previous: heatmaps-join-json-5
    plugin_parameter_defaults:
      inputImageName: "input.jpg"
      pointMarker: "."
      pointSize: 10
      linewidth: 0.5
      lineGap: 70
      addText: "Not for diagnostic use"
      addTextPos: bottom
      addTextSize: 5
      addTextColor: darkred

  # As we get ready to convert the above image to DICOM, we join the generated
  # image with the DICOM join to collect all the info needed to create
  # a DICOM off this image
  - title: measurement-join-dicom-7
    plugin: pl-topologicalcopy v1.0.2
    previous: heatmaps-join-root-3
    plugin_parameter_defaults:
      plugininstances: heatmaps-join-root-3,measure-leg-segments-6
      filter: \.dcm$,\.png$

  # With the join containing all the necessary information, we can now
  # generate new DICOMs
  - title: image-to-DICOM-8
    plugin: pl-dicommake v2.3.2
    previous: measurement-join-dicom-7
    plugin_parameter_defaults:
      filterIMG: "**/*.png"
      outputSubDir: data
      thread: true

  # And finally, we push the DICOMs to a destination PACS resource
  - title: pacs-push-9
    plugin: pl-dicom_dirsend v1.1.2
    previous: image-to-DICOM-8
    plugin_parameter_defaults:
      fileFilter: "dcm"
      host: 0.0.0.0
      port: 104
      aetTitle: "SYNAPSERESEARCH"

